[{"/home/lenovo/Downloads/template/chat-app-frontend/src/index.js":"1","/home/lenovo/Downloads/template/chat-app-frontend/src/App.js":"2","/home/lenovo/Downloads/template/chat-app-frontend/src/store.js":"3","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/auth.js":"4","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/alert.js":"5","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/Chat.js":"6","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/layout/Landing.js":"7","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/auth/Login.js":"8","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/auth/Register.js":"9","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/dashboard/dashboard.js":"10","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/layout/Navbar.js":"11","/home/lenovo/Downloads/template/chat-app-frontend/src/components/routing/PrivateRoute.js":"12","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/alert.js":"13","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/types.js":"14","/home/lenovo/Downloads/template/chat-app-frontend/src/utils/setAuthToken.js":"15","/home/lenovo/Downloads/template/chat-app-frontend/src/components/auth/Login.js":"16","/home/lenovo/Downloads/template/chat-app-frontend/src/components/auth/Register.js":"17","/home/lenovo/Downloads/template/chat-app-frontend/src/components/dashboard/dashboard.js":"18","/home/lenovo/Downloads/template/chat-app-frontend/src/components/Chat.js":"19","/home/lenovo/Downloads/template/chat-app-frontend/src/reducers/index.js":"20","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/Get_Events.js":"21","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/Get_Conv.js":"22","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/Add_Conv.js":"23","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/newConversation.js":"24","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/postMessage.js":"25","/home/lenovo/Downloads/template/chat-app-frontend/src/reducers/auth.js":"26","/home/lenovo/Downloads/template/chat-app-frontend/src/reducers/alert.js":"27","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/new_conver_state.js":"28"},{"size":200,"mtime":1613745116711,"results":"29","hashOfConfig":"30"},{"size":2198,"mtime":1613844889868,"results":"31","hashOfConfig":"30"},{"size":379,"mtime":1613745116711,"results":"32","hashOfConfig":"30"},{"size":2455,"mtime":1613815672706,"results":"33","hashOfConfig":"30"},{"size":481,"mtime":1613745116683,"results":"34","hashOfConfig":"30"},{"size":679,"mtime":1613745116683,"results":"35","hashOfConfig":"30"},{"size":1384,"mtime":1613745116683,"results":"36","hashOfConfig":"30"},{"size":1354,"mtime":1613819507072,"results":"37","hashOfConfig":"30"},{"size":1395,"mtime":1613745116683,"results":"38","hashOfConfig":"30"},{"size":668,"mtime":1613745116683,"results":"39","hashOfConfig":"30"},{"size":1861,"mtime":1613815672706,"results":"40","hashOfConfig":"30"},{"size":627,"mtime":1613745116683,"results":"41","hashOfConfig":"30"},{"size":229,"mtime":1613745116683,"results":"42","hashOfConfig":"30"},{"size":1327,"mtime":1613994767330,"results":"43","hashOfConfig":"30"},{"size":242,"mtime":1613745116711,"results":"44","hashOfConfig":"30"},{"size":3642,"mtime":1613745116683,"results":"45","hashOfConfig":"30"},{"size":2972,"mtime":1613745116683,"results":"46","hashOfConfig":"30"},{"size":2480,"mtime":1613745116683,"results":"47","hashOfConfig":"30"},{"size":8403,"mtime":1614076830917,"results":"48","hashOfConfig":"30"},{"size":249,"mtime":1613745116711,"results":"49","hashOfConfig":"30"},{"size":707,"mtime":1614075488226,"results":"50","hashOfConfig":"30"},{"size":595,"mtime":1613851813479,"results":"51","hashOfConfig":"30"},{"size":612,"mtime":1613831892060,"results":"52","hashOfConfig":"30"},{"size":749,"mtime":1613992152127,"results":"53","hashOfConfig":"30"},{"size":1160,"mtime":1613978678011,"results":"54","hashOfConfig":"30"},{"size":2585,"mtime":1614016782744,"results":"55","hashOfConfig":"30"},{"size":372,"mtime":1613745116711,"results":"56","hashOfConfig":"30"},{"size":494,"mtime":1613994743946,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"3ggq0u",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"60"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"60"},"/home/lenovo/Downloads/template/chat-app-frontend/src/index.js",[],["134","135"],"/home/lenovo/Downloads/template/chat-app-frontend/src/App.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/store.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/actions/auth.js",["136"],"import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  //CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert.js\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const loadUser = () => async (dispatch) => {\n  //console.log(localStorage.token);\n  \n  try {\n    // console.log(\"token hai ye2!\");\n    // console.log(localStorage.token);\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  \n    //console.log(\"in\");\n    const res = await axios.get(\"/api/auth\");\n    console.log(\"in user loaded\");\n    // if (res) console.log(res);\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"action\");\n  const body = JSON.stringify({ name, email, password });\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    //localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    // const errors = err.response.data.errors;\n    // if (errors) {\n    //   errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n    // }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n//login\nexport const login = (formData) => async (dispatch) => {\n  //console.log(email);\n  \n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  \n  try {\n    \n    const res = await axios.post(\"/api/auth\", formData, config);\n    \n    //localStorage.setItem(\"token\", res.data.token);\n    console.log(\"before login success dis\")\n    \n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    \n    dispatch(loadUser());\n    \n  } catch (err) {\n    //console.log(\"ye hai error\")\n    //console.log(err)\n    // const errors = err.response.data.errors;\n    // if (errors) {\n    //   errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n    // }\n    //localStorage.removeItem(\"token\");\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n//logout\nexport const logout = () => (dispatch) => {\n  console.log(\"logout\");\n  dispatch({ type: LOGOUT });\n};\n\n\n","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/alert.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/containers/Chat.js",["137","138","139","140"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport Chat1 from \"../components/Chat\";\n\nconst Chat = ({ user_name }) => {\n  console.log(\"inside chat container\");\n  console.log(user_name);\n//   const onSubmit = async (e) => {\n//     e.preventDefault();\n\n//     console.log(\"on click\");\n//   };\n  //redirect if logged in\n\n  return <Chat1 user_name={user_name}  />;\n};\nChat.propTypes = {\n  user_name: PropTypes.string,\n};\n\nconst mapStateToProps = (state) => ({\n  user_name: state.auth.user.name,\n});\n\nexport default connect(mapStateToProps, {})(Chat);\n","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/layout/Landing.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/containers/auth/Login.js",["141","142","143","144"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/auth\";\nimport Present_login from \"../../components/auth/Login\";\nconst io = require(\"socket.io-client\");\n// const socket = io();\nconst temp=\"http://LocalHost:5000\"\nconst socket = io(temp, { transports: [\"websocket\"] });\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = formData;\n  const onChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login({ email: email, password: password });\n    console.log(\"Success\");\n  };\n  //redirect if logged in\n\n  if (isAuthenticated) {\n    return <Redirect to=\"/chat\" />;\n  }\n\n  return (\n    <Present_login\n      isAuthenticated={isAuthenticated}\n      formData={formData}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    />\n  );\n};\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { login })(Login);\n","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/auth/Register.js",["145","146","147"],"import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport { setAlert } from \"../../actions/alert\";\nimport PropTypes from \"prop-types\";\nimport { register } from \"../../actions/auth\";\nimport Present_register from \"../../components/auth/Register\";\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  \n  });\n  const { name, email, password } = formData;\n  const onChange = (e) =>\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  const onSubmit = (e) => {\n    console.log(\"hi\");\n    e.preventDefault();\n    // if (password !== password2) setAlert(\"Passwords dont match\", \"danger\");\n  register({ name, email, password });\n  };\n  if (isAuthenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Present_register\n      isAuthenticated={isAuthenticated}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      formData={formData}\n    />\n  );\n};\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/dashboard/dashboard.js",["148","149","150"],"//fetch all data using action and pass it on to other componenets\nimport React, { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport Dashboard2 from \"../../components/dashboard/dashboard\";\n\nconst Dashboard = ({ category }) => {\n  //   useEffect(() => {\n  //     getCurrentProfile();\n  //   }, []);\n  console.log(category);\n  return <Dashboard2 category={category} />;\n};\nDashboard.propTypes = {\n  category: PropTypes.string,\n};\nconst mapStateToProps = (state) => ({\n  category: state.auth.category,\n});\nexport default connect(mapStateToProps, {})(Dashboard);\n","/home/lenovo/Downloads/template/chat-app-frontend/src/containers/layout/Navbar.js",["151"],"import { React, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport DirectionsBusIcon from \"@material-ui/icons/DirectionsBus\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nimport { logout } from \"../../actions/auth\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nconst NavBar = ({ getbuses, logout, auth: { isAuthenticated, loading } }) => {\n  \n  const authLinks = (\n    <ul>\n      <li>\n        {/* <Link to=\"/Buses\">\n          <DirectionsBusIcon fontSize=\"large\" />\n        </Link> */}\n      </li>\n      <li>\n        <a onClick={logout} href=\"/login\">\n          {/* <i className=\"fas fa-sign-out-alt\" /> */}\n          {\"\"}\n          <span className=\"hide-sm\">\n            <ExitToAppIcon fontSize=\"large\" />\n          </span>\n        </a>\n      </li>\n    </ul>\n  );\n  \n  const guestLinks = (\n    <ul>\n      <ul>\n        <li>\n          <Link to=\"/register\">\n            <PersonAddIcon fontSize=\"large\" />\n          </Link>\n        </li>\n\n        <li>\n          <Link to=\"/login\">\n            <AccountCircleIcon fontSize=\"large\" />\n          </Link>\n        </li>\n      </ul>\n    </ul>\n  );\n  return (\n    <nav className=\"navbar bg-dark\">\n      {\" \"}\n      <Link to=\"/\">\n        <h1 className=\"large1\">\n          {\" \"}\n          <i className=\"fas fa-code\" />\n          Hyper Tribe{\" \"}\n        </h1>\n      </Link>\n      <h1> </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavBar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(NavBar);\n","/home/lenovo/Downloads/template/chat-app-frontend/src/components/routing/PrivateRoute.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/actions/alert.js",["152"],"import { SET_ALERT, REMOVE_ALERT } from \"./types\";\n\nexport const setAlert = (msg, alertType) => (dispatch) => {\n  //const id=uuid.v4();\n  dispatch({\n    type: SET_ALERT,\n    payload: {\n      msg,\n      alertType,\n    },\n  });\n};\n","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/types.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/utils/setAuthToken.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/components/auth/Login.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport PropTypes from \"prop-types\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport VpnKeyIcon from \"@material-ui/icons/VpnKey\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 20,\n  },\n  media: {\n    marginTop: 50,\n    height: 140,\n  },\n  ab: {\n    width: 500,\n    backgroundColor: \"black\",\n    color: \"white\",\n  },\n  home: {\n    width: 150,\n    height: 30,\n    fontSize: 20,\n    backgroundColor: \"black\",\n    color: \"white\",\n  },\n});\nconst Login = ({ isAuthenticated, formData, onChange, onSubmit }) => {\n  const { email, password } = formData;\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <center>\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <br />\n        <div className=\"border1\">\n          <br />\n          <br />\n          <br />\n          <h1 className=\"large text-dark\">Sign In</h1>\n          <p className=\"black\">\n            <i className=\"fas fa-user\"></i> Sign in your Account\n          </p>\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                placeholder=\"Email-Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n            {/* <div className=\"form-group\">\n              <input\n                type=\"text\"\n                placeholder=\"Category\"\n                name=\"category\"\n                value={category}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div> */}\n            <div className=\"form-group\">\n              <input\n                type=\"Password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                minLength=\"6\"\n                value={password}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n\n            {/* //<Button onClick={onSubmit} variant=\"contained\">Default</Button> */}\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              className={classes.home}\n              value=\"login\"\n            >\n              Sign In\n            </Button>\n\n            <br />\n            <br />\n          </form>\n          Dont have an account?{\" \"}\n          <Link to=\"/register\">\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              value=\"login\"\n            >\n              Sign Up\n            </Button>\n          </Link>\n        </div>\n      </center>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  formData: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nexport default Login;\n","/home/lenovo/Downloads/template/chat-app-frontend/src/components/auth/Register.js",["167","168"],"import React, { Fragment, useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 20,\n  },\n  media: {\n    marginTop: 50,\n    height: 140,\n  },\n  ab: {\n    width: 500,\n    backgroundColor: \"black\",\n    color: \"white\",\n  },\n  home: {\n    width: 150,\n    height: 30,\n    fontSize: 20,\n    backgroundColor: \"black\",\n    color: \"white\",\n  },\n});\nconst Register = ({ isAuthenticated, onChange, onSubmit, formData }) => {\n  const { name, email, password } = formData;\n  const classes = useStyles();\n  return (\n    <Fragment>\n      <center>\n        <br />\n        <br />\n        <br />\n\n        <div className=\"border1\">\n          <br />\n          <br />\n          <br />\n          <h1 className=\"large text-dark\">Sign Up</h1>\n          <p className=\"black\">\n            <i className=\"fas fa-user\"></i> Create Your Account\n          </p>\n          <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\n            <div className=\"form-group\">\n              <input\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={name}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                placeholder=\"Email Address\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                minLength=\"6\"\n                value={password}\n                onChange={(e) => onChange(e)}\n                required\n              />\n            </div>\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              className={classes.home}\n              value=\"login\"\n              onClick={onSubmit}\n            >\n              Register\n            </Button>\n            <br />\n            <br />\n          </form>\n          <p className=\"whitblacke\">\n            Already have an account?{\" \"}\n            <Link to=\"/login\">\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"secondary\"\n                value=\"login\"\n              >\n                Sign In\n              </Button>\n            </Link>\n          </p>\n        </div>\n      </center>\n    </Fragment>\n  );\n};\nRegister.propTypes = {\n  formData: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nexport default Register;\n","/home/lenovo/Downloads/template/chat-app-frontend/src/components/dashboard/dashboard.js",["169","170","171","172"],"import React, { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Redirect } from \"react-router-dom\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 500,\n    marginTop: 20,\n    maxHeight: 600,\n  },\n  a: {\n    height: 50,\n    fontSize: 30,\n    width: 250,\n    backgroundColor: \"black\",\n    color: \"white\",\n  },\n});\nconst Dashboard = ({ category }) => {\n  const classes = useStyles();\n  if (category == \"admin\") {\n    return (\n      <Fragment>\n        {\" \"}\n        <Fragment>\n          <br />\n          <br />\n          <br />\n          <center>\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <br />\n            <Card className={classes.root} variant=\"outlined\">\n              <CardContent>\n                <Typography\n                  className={classes.title}\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  <h2 className=\"large\">\n                    <PersonIcon fontSize=\"large\" /> Welcome Admin\n                  </h2>\n                  <br />\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  <Link to=\"/addbus\">\n                    <Button className={classes.a}>Add bus</Button>\n                  </Link>\n                  <br /> <br />\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  <br />\n                  <br />\n                </Typography>\n              </CardContent>\n            </Card>\n\n            <br />\n          </center>\n        </Fragment>\n        <br /> <br />\n        <Fragment>\n          <center></center>\n        </Fragment>\n      </Fragment>\n    );\n  } else {\n    return (\n      <Fragment>\n        {}\n\n        <Fragment>\n          <br />\n          <br />\n          <br />\n          <center></center>\n        </Fragment>\n      </Fragment>\n    );\n  }\n};\n\nDashboard.propTypes = {\n  category: PropTypes.string,\n};\n\nexport default Dashboard;\n","/home/lenovo/Downloads/template/chat-app-frontend/src/components/Chat.js",["173","174","175","176","177","178","179"],"import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { Get_Conv } from \"../actions/Get_Conv\";\nimport { Add_Conv } from \"../actions/Add_Conv\";\nimport { newConversation } from \"../actions/newConversation\";\nimport { Get_Events } from \"../actions/Get_Events\";\nimport { postMessage } from \"../actions/postMessage\";\nimport { new_conver_state } from \"../actions/new_conver_state\";\nconst io = require(\"socket.io-client\");\nconst ENDPOINT = \"http://localhost:5000\";\nlet socket;\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 20,\n  },\n  media: {\n    marginTop: 50,\n    height: 140,\n  },\n  ab: {\n    width: 500,\n    backgroundColor: \"black\",\n    color: \"white\",\n  },\n  home: {\n    topPadding: 15,\n    width: 100,\n    height: 20,\n    fontSize: 15,\n    backgroundColor: \"black\",\n    color: \"white\",\n  },\n});\n\nconst Chat = ({\n  user_name,\n  Get_Conv,\n  Add_Conv,\n  conversation,\n  auth,\n  newConversation,\n  Get_Events,\n  currentconversation,\n  postMessage,\n  currentevents,\n  new_conver_state,\n}) => {\n  const fun = ({ chatid }) => {\n    console.log(\"fun\");\n    console.log(chatid);\n    newConversation({ chatid: chatid });\n    console.log(\"calling get function sakshiiiiii\");\n    console.log(Date.now);\n    Get_Events({ chatRoomId: chatid });\n  };\n  useEffect(() => {\n    console.log(\"i am useeffect\");\n    //const name = auth.user.name;\n    Get_Conv({ user_name: user_name });\n  }, []);\n  useEffect(() => {\n    socket = io(ENDPOINT, { transports: [\"websocket\", \"polling\"] });\n\n    if (auth.user.name !== undefined && conversation.length > 0) {\n      const me = auth.user.name;\n      console.log(\"AAAAAAAA\", me);\n      socket.emit(\"join\", { me, conversation }, (error) => {\n        if (error) {\n          alert(error);\n        }\n      });\n    }\n  }, [ENDPOINT, auth, conversation]);\n\n  useEffect(() => {\n    socket.on(\"newConversation\", ({ newConvo }) => {\n      console.log(\"YES YAAR\");\n      console.log(newConvo, \"new conversation\");\n      new_conver_state(newConvo);\n    });\n  }, []);\n\n  const [contacts, setContacts] = useState([]);\n\n  const [temp2, settemp2] = useState(\"\");\n  const [message, setmessage] = useState(\"\");\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    setContacts((con) => [...con, temp2]);\n    //search.value=\"\";\n    document.getElementById(\"outlined-basic-email\").value = \"\";\n\n    //add conv\n    Add_Conv({ user_name: temp2 });\n\n    console.log(\"calling get\");\n    //Get_Conv({ user_name: user_name });\n    //console.log(\"on click\");\n  };\n\n  //console.log(\"hello everybody\");\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" className=\"header-message\"></Typography>\n        </Grid>\n      </Grid>\n      <Grid container component={Paper} className={classes.chatSection}>\n        <Grid item xs={3} className={classes.borderRight500}>\n          <List>\n            <ListItem button key={user_name}>\n              <ListItemIcon>\n                <AccountCircleIcon />\n              </ListItemIcon>\n              <ListItemText primary={user_name}></ListItemText>\n            </ListItem>\n          </List>\n          <Divider />\n          <Grid item xs={12} style={{ padding: \"10px\" }}>\n            <TextField\n              name=\"search\"\n              id=\"outlined-basic-email\"\n              label=\"Enter User_Name\"\n              variant=\"outlined\"\n              onChange={(e) => settemp2(e.target.value)}\n              fullWidth\n            />\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              className={classes.home}\n              value=\"login\"\n              onClick={onSubmit}\n            >\n              Search\n            </Button>\n          </Grid>\n          <Divider />\n          <List>\n            {conversation.map((conversations) => {\n              conversations.recipients = conversations.recipients.filter(\n                (recipient) => recipient._id !== auth.user._id\n              );\n            })}\n\n            {!conversation.length ? (\n              <h1>No Contacts Found</h1>\n            ) : (\n              conversation.map((x) => (\n                // console.log(x._id)\n                <ListItem\n                  button\n                  onClick={(e) => fun({ chatid: x._id })}\n                  key={x.recipients[0].name}\n                >\n                  <ListItemIcon>\n                    <PersonAddIcon />\n                  </ListItemIcon>\n                  <ListItemText primary={x.recipients[0].name}>\n                    {x.recipients[0].name}\n                  </ListItemText>\n                </ListItem>\n              ))\n            )}\n          </List>\n        </Grid>\n\n        <Grid item xs={9}>\n          <List className={classes.messageArea}>\n            {currentevents.length &&\n              currentevents.map((curr) => (\n                <ListItem>\n                  <Grid container>\n                    <Grid item xs={12}>\n                      {curr.sender === auth.user._id && (\n                        <ListItemText\n                          align=\"right\"\n                          primary={curr.text}\n                          secondary={curr.date.substr(11, 5)}\n                        ></ListItemText>\n                      )}\n                      {curr.sender !== auth.user._id && (\n                        <ListItemText\n                          align=\"left\"\n                          primary={curr.text}\n                          secondary={curr.date.substr(11, 5)}\n                        ></ListItemText>\n                      )}\n                    </Grid>\n                    <Grid item xs={12}>\n                      <ListItemText align=\"right\"></ListItemText>\n                    </Grid>\n                  </Grid>\n                </ListItem>\n              ))}\n          </List>\n          <Divider />\n          <Grid container style={{ padding: \"20px\" }}>\n            <Grid item xs={11}>\n              <TextField\n                id=\"outlined-basic-email\"\n                label=\"Write a Message\"\n                fullWidth\n                onChange={(e) => setmessage(e.target.value)}\n              />\n            </Grid>\n            <Grid xs={1} align=\"right\">\n              <Fab\n                onClick={(e) =>\n                  postMessage({\n                    text: message,\n                    chatRoomId: currentconversation._id,\n                    messageId: currentevents.length + 1,\n                  })\n                }\n                color=\"primary\"\n                aria-label=\"add\"\n              >\n                <SendIcon />\n              </Fab>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nChat.propTypes = {\n  user_name: PropTypes.string,\n  Get_Conv: PropTypes.func.isRequired,\n  Add_Conv: PropTypes.func.isRequired,\n  conversation: PropTypes.object.isRequired,\n  Get_Events: PropTypes.func.isRequired,\n  currentconversation: PropTypes.object.isRequired,\n  postMessage: PropTypes.func.isRequired,\n  currentevents: PropTypes.object.isRequired,\n  new_conver_state: PropTypes.func.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  conversation: state.auth.conversation,\n  auth: state.auth,\n  currentconversation: state.auth.currentconversation,\n  currentevents: state.auth.currentevents,\n});\n\nexport default connect(mapStateToProps, {\n  Get_Conv,\n  Add_Conv,\n  newConversation,\n  Get_Events,\n  postMessage,\n  new_conver_state,\n})(Chat);\n","/home/lenovo/Downloads/template/chat-app-frontend/src/reducers/index.js",[],"/home/lenovo/Downloads/template/chat-app-frontend/src/actions/Get_Events.js",["180"],"import axios from \"axios\";\nimport { GET_EVENTS } from \"./types\";\nconst io = require(\"socket.io-client\");\n\nconst socket = io(\"http://localhost:5000\", { transports: [\"websocket\"] });\n// Register User\nexport const Get_Events = ({ chatRoomId }) => async (dispatch) => {\n  console.log(\"SAKSHIIIIIIIIIIIIIIIIIIIII\");\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ chatRoomId });\n  try {\n    console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@\");\n    const res = await axios.post(\"/api/event/getEvents\", body, config);\n    console.log(\"calling reducer\");\n\n    dispatch({\n      type: GET_EVENTS,\n      payload: res.data,\n    });\n  } catch (err) {}\n};\n","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/Get_Conv.js",["181"],"import axios from \"axios\";\nimport { GET_CONV } from \"./types\";\nimport { CONV_ERROR } from \"./types\";\nimport { setAlert } from \"./alert.js\";\n\n// Register User\nexport const Get_Conv = ({ user_name }) => async (dispatch) => {\n  //   console.log(\"inside get convo action1234564321\");\n\n  console.log(\"ody\");\n\n  try {\n    console.log(\"Hp\");\n    const res = await axios.get(\"/api/users/conversations\");\n    console.log(\"response\");\n    console.log(res);\n\n    dispatch({\n      type: GET_CONV,\n      payload: res.data,\n    });\n    \n  } catch (err) {\n    dispatch({\n      type: CONV_ERROR,\n    });\n  }\n};\n","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/Add_Conv.js",["182"],"import axios from \"axios\";\nimport { ADD_CONV } from \"./types\";\nconst io = require(\"socket.io-client\");\n\nconst socket = io(\"http://localhost:5000\", { transports: [\"websocket\"] });\n// Register User\nexport const Add_Conv = ({ user_name }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  const body = JSON.stringify({ user_name });\n  try {\n    console.log(\"inside action\");\n    const res = await axios.post(\"/api/users/newConversation\", body, config);\n\n    dispatch({\n      type: ADD_CONV,\n      payload: res.data,\n    });\n  \n  } catch (err) {}\n};\n","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/newConversation.js",["183"],"import axios from \"axios\";\nimport { CURRENT_CONV } from \"./types\";\nimport { CONV_ERROR } from \"./types\";\nconst io = require(\"socket.io-client\");\n\n// Register User\nexport const newConversation = ({ chatid }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(chatid);\n  const body = JSON.stringify({ chatid });\n  try {\n    console.log(\"inside action new conversation\");\n    const res = await axios.post(\"/api/users/conversation\", body, config);\n    console.log(\"hello aashish\");\n    console.log(res.data);\n    dispatch({\n      type: CURRENT_CONV,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: CONV_ERROR,\n    });\n  }\n};\n","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/postMessage.js",["184"],"import axios from \"axios\";\n import {ADDMESSAGE } from \"./types\";\nimport { CONV_ERROR } from \"./types\";\nconst io = require(\"socket.io-client\");\nconst ENDPOINT = \"http://localhost:5000\"\n\n// Register User\nexport const postMessage = ({ text, chatRoomId,messageId }) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(chatRoomId);\n  console.log(messageId);\n  let type = \"CREATE\";\n  \n  const body = JSON.stringify({ chatRoomId, type, messageId, text });\n  try {\n    console.log(\"inside action post Message\");\n    const res = await axios.post(\"/api/event/\", body, config);\n    console.log(\"hello MESSAGEEEEEEE\");\n    console.log(res.data);\n    dispatch({\n      type: ADDMESSAGE,\n      payload: res.data,\n    });\n    console.log(\"calling socket\");\n    let socket = io(ENDPOINT, { transports: [\"websocket\", \"polling\"] });\n    socket.emit(\"new_message\", { text,chatRoomId}, (error) => {\n       //console.log(\"YYYYYYYYYYYYYYYYYYYYY\");\n      if (error) {\n        alert(error);\n      }\n    });\n  } catch (err) {\n    console.log(err);\n    // dispatch({\n    //   type: CONV_ERROR,\n    // });\n  }\n};\n","/home/lenovo/Downloads/template/chat-app-frontend/src/reducers/auth.js",[],["185","186"],"/home/lenovo/Downloads/template/chat-app-frontend/src/reducers/alert.js",["187"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\nconst initialState = [];\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","/home/lenovo/Downloads/template/chat-app-frontend/src/actions/new_conver_state.js",["188","189","190"],"import axios from \"axios\";\nimport { ADD_CONV } from \"./types\";\n import { CONV_STATE } from \"./types\";\n// import { CONV_ERROR } from \"./types\";\nconst io = require(\"socket.io-client\");\n\n// Register User\nexport const new_conver_state = ({ newConvo }) => async (dispatch) => {\n\n  try {\n    console.log(\"DDDDDDDDDDD\");\n    \n    dispatch({\n      type: CONV_STATE,\n      payload: newConvo,\n    });\n  } catch (err) {\n    console.log(err);\n    // dispatch({\n    //   type: CONV_ERROR,\n    // });\n  }\n};\n",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":12,"column":10,"nodeType":"197","messageId":"198","endLine":12,"endColumn":18},{"ruleId":"195","severity":1,"message":"199","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"200","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":35},{"ruleId":"195","severity":1,"message":"201","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"202","line":2,"column":16,"nodeType":"197","messageId":"198","endLine":2,"endColumn":24},{"ruleId":"195","severity":1,"message":"199","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"201","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":14},{"ruleId":"195","severity":1,"message":"203","line":10,"column":7,"nodeType":"197","messageId":"198","endLine":10,"endColumn":13},{"ruleId":"204","severity":1,"message":"205","line":35,"column":5,"nodeType":"206","endLine":40,"endColumn":7},{"ruleId":"195","severity":1,"message":"199","line":1,"column":17,"nodeType":"197","messageId":"198","endLine":1,"endColumn":25},{"ruleId":"195","severity":1,"message":"201","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":14},{"ruleId":"204","severity":1,"message":"207","line":33,"column":5,"nodeType":"206","endLine":38,"endColumn":7},{"ruleId":"195","severity":1,"message":"199","line":2,"column":17,"nodeType":"197","messageId":"198","endLine":2,"endColumn":25},{"ruleId":"195","severity":1,"message":"208","line":2,"column":27,"nodeType":"197","messageId":"198","endLine":2,"endColumn":36},{"ruleId":"195","severity":1,"message":"201","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":14},{"ruleId":"195","severity":1,"message":"209","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":25},{"ruleId":"195","severity":1,"message":"210","line":1,"column":21,"nodeType":"197","messageId":"198","endLine":1,"endColumn":33},{"ruleId":"195","severity":1,"message":"200","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":35},{"ruleId":"195","severity":1,"message":"202","line":2,"column":16,"nodeType":"197","messageId":"198","endLine":2,"endColumn":24},{"ruleId":"195","severity":1,"message":"211","line":4,"column":8,"nodeType":"197","messageId":"198","endLine":4,"endColumn":14},{"ruleId":"195","severity":1,"message":"212","line":6,"column":8,"nodeType":"197","messageId":"198","endLine":6,"endColumn":19},{"ruleId":"195","severity":1,"message":"213","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":17},{"ruleId":"195","severity":1,"message":"214","line":8,"column":8,"nodeType":"197","messageId":"198","endLine":8,"endColumn":24},{"ruleId":"195","severity":1,"message":"215","line":9,"column":8,"nodeType":"197","messageId":"198","endLine":9,"endColumn":16},{"ruleId":"195","severity":1,"message":"216","line":11,"column":8,"nodeType":"197","messageId":"198","endLine":11,"endColumn":12},{"ruleId":"195","severity":1,"message":"217","line":12,"column":8,"nodeType":"197","messageId":"198","endLine":12,"endColumn":11},{"ruleId":"195","severity":1,"message":"218","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":18},{"ruleId":"195","severity":1,"message":"219","line":16,"column":8,"nodeType":"197","messageId":"198","endLine":16,"endColumn":17},{"ruleId":"195","severity":1,"message":"220","line":19,"column":8,"nodeType":"197","messageId":"198","endLine":19,"endColumn":17},{"ruleId":"195","severity":1,"message":"221","line":20,"column":8,"nodeType":"197","messageId":"198","endLine":20,"endColumn":25},{"ruleId":"195","severity":1,"message":"222","line":21,"column":8,"nodeType":"197","messageId":"198","endLine":21,"endColumn":18},{"ruleId":"195","severity":1,"message":"200","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":35},{"ruleId":"195","severity":1,"message":"202","line":2,"column":16,"nodeType":"197","messageId":"198","endLine":2,"endColumn":24},{"ruleId":"195","severity":1,"message":"208","line":1,"column":27,"nodeType":"197","messageId":"198","endLine":1,"endColumn":36},{"ruleId":"195","severity":1,"message":"223","line":9,"column":8,"nodeType":"197","messageId":"198","endLine":9,"endColumn":19},{"ruleId":"195","severity":1,"message":"202","line":11,"column":10,"nodeType":"197","messageId":"198","endLine":11,"endColumn":18},{"ruleId":"224","severity":1,"message":"225","line":31,"column":16,"nodeType":"226","messageId":"227","endLine":31,"endColumn":18},{"ruleId":"195","severity":1,"message":"217","line":5,"column":8,"nodeType":"197","messageId":"198","endLine":5,"endColumn":11},{"ruleId":"195","severity":1,"message":"211","line":14,"column":8,"nodeType":"197","messageId":"198","endLine":14,"endColumn":14},{"ruleId":"228","severity":1,"message":"229","line":81,"column":6,"nodeType":"230","endLine":81,"endColumn":8,"suggestions":"231"},{"ruleId":"228","severity":1,"message":"232","line":94,"column":6,"nodeType":"230","endLine":94,"endColumn":36,"suggestions":"233"},{"ruleId":"228","severity":1,"message":"234","line":102,"column":6,"nodeType":"230","endLine":102,"endColumn":8,"suggestions":"235"},{"ruleId":"195","severity":1,"message":"236","line":104,"column":10,"nodeType":"197","messageId":"198","endLine":104,"endColumn":18},{"ruleId":"237","severity":1,"message":"238","line":167,"column":47,"nodeType":"239","messageId":"240","endLine":167,"endColumn":49},{"ruleId":"195","severity":1,"message":"203","line":5,"column":7,"nodeType":"197","messageId":"198","endLine":5,"endColumn":13},{"ruleId":"195","severity":1,"message":"196","line":4,"column":10,"nodeType":"197","messageId":"198","endLine":4,"endColumn":18},{"ruleId":"195","severity":1,"message":"203","line":5,"column":7,"nodeType":"197","messageId":"198","endLine":5,"endColumn":13},{"ruleId":"195","severity":1,"message":"241","line":4,"column":7,"nodeType":"197","messageId":"198","endLine":4,"endColumn":9},{"ruleId":"195","severity":1,"message":"242","line":3,"column":10,"nodeType":"197","messageId":"198","endLine":3,"endColumn":20},{"ruleId":"191","replacedBy":"243"},{"ruleId":"193","replacedBy":"244"},{"ruleId":"245","severity":1,"message":"246","line":3,"column":1,"nodeType":"247","endLine":13,"endColumn":2},{"ruleId":"195","severity":1,"message":"248","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":13},{"ruleId":"195","severity":1,"message":"249","line":2,"column":10,"nodeType":"197","messageId":"198","endLine":2,"endColumn":18},{"ruleId":"195","severity":1,"message":"241","line":5,"column":7,"nodeType":"197","messageId":"198","endLine":5,"endColumn":9},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'setAlert' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'socket' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Present_login must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component Present_register must be in PascalCase or SCREAMING_SNAKE_CASE","'useEffect' is defined but never used.","'DirectionsBusIcon' is defined but never used.","'REMOVE_ALERT' is defined but never used.","'Avatar' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'EmailIcon' is defined but never used.","'AccountCircleIcon' is defined but never used.","'VpnKeyIcon' is defined but never used.","'CardActions' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Get_Conv' and 'user_name'. Either include them or remove the dependency array. If 'Get_Conv' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["252"],"React Hook useEffect has an unnecessary dependency: 'ENDPOINT'. Either exclude it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.",["253"],"React Hook useEffect has a missing dependency: 'new_conver_state'. Either include it or remove the dependency array. If 'new_conver_state' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["254"],"'contacts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'io' is assigned a value but never used.","'CONV_ERROR' is defined but never used.",["250"],["251"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'axios' is defined but never used.","'ADD_CONV' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},"Update the dependencies array to be: [Get_Conv, user_name]",{"range":"261","text":"262"},"Update the dependencies array to be: [auth, conversation]",{"range":"263","text":"264"},"Update the dependencies array to be: [new_conver_state]",{"range":"265","text":"266"},[2364,2366],"[Get_Conv, user_name]",[2731,2761],"[auth, conversation]",[2965,2967],"[new_conver_state]"]