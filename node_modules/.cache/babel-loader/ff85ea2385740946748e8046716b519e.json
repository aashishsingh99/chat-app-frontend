{"ast":null,"code":"import axios from \"axios\";\nimport { //   REGISTER_SUCCESS,\n//   REGISTER_FAIL,\nUSER_LOADED, AUTH_ERROR //   LOGIN_SUCCESS,\n//   LOGIN_FAIL,\n//   LOGOUT,\n//   CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert.js\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // // Register User\n// export const register = ({ name, email, password }) => async (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ name, email, password });\n//   try {\n//     const res = await axios.post(\"/api/users\", body, config);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: REGISTER_FAIL,\n//     });\n//   }\n// };\n// export const login = ({ email, password }) => async (dispatch) => {\n//   console.log(email);\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ email, password });\n//   console.log(email);\n//   try {\n//     console.log(\"FISH\");\n//     const res = await axios.post(\"/api/auth\", body, config);\n//     console.log(\"HIII\");\n//     console.log(res);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n//     localStorage.removeItem(\"token\");\n//     dispatch({\n//       type: LOGIN_FAIL,\n//     });\n//   }\n// };\n// //logout\n// export const logout = () => (dispatch) => {\n//   dispatch({ type: LOGOUT });\n//   dispatch({ type: CLEAR_PROFILE });\n// };","map":{"version":3,"sources":["/home/lenovo/Downloads/bus/client/src/actions/auth.js"],"names":["axios","USER_LOADED","AUTH_ERROR","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACE;AACA;AACAC,WAHF,EAIEC,UAJF,CAKE;AACA;AACA;AACA;AARF,OASO,SATP;AAUA,SAASC,QAAT,QAAyB,YAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACD;;AACD,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,UAAV,CAAlB;AAEAJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEV,WADC;AAEPW,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFN,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD;AACF,CAhBM,C,CAkBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport {\n  //   REGISTER_SUCCESS,\n  //   REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  //   LOGIN_SUCCESS,\n  //   LOGIN_FAIL,\n  //   LOGOUT,\n  //   CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert.js\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\"api/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// // Register User\n// export const register = ({ name, email, password }) => async (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ name, email, password });\n//   try {\n//     const res = await axios.post(\"/api/users\", body, config);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n\n//     dispatch({\n//       type: REGISTER_FAIL,\n//     });\n//   }\n// };\n// export const login = ({ email, password }) => async (dispatch) => {\n//   console.log(email);\n\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ email, password });\n//   console.log(email);\n//   try {\n//     console.log(\"FISH\");\n//     const res = await axios.post(\"/api/auth\", body, config);\n//     console.log(\"HIII\");\n//     console.log(res);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n//     localStorage.removeItem(\"token\");\n\n//     dispatch({\n//       type: LOGIN_FAIL,\n//     });\n//   }\n// };\n// //logout\n// export const logout = () => (dispatch) => {\n//   dispatch({ type: LOGOUT });\n//   dispatch({ type: CLEAR_PROFILE });\n// };\n"]},"metadata":{},"sourceType":"module"}