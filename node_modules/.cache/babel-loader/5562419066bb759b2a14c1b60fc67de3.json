{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT //CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert.js\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const loadUser = () => async dispatch => {\n  //console.log(localStorage.token);\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    //console.log(\"in\");\n    const res = await axios.get(\"api/auth\");\n    console.log(\"in user loaded\");\n    if (res) console.log(res);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  category,\n  password\n}) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log(\"action\");\n  const body = JSON.stringify({\n    name,\n    email,\n    category,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(errpr => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; //login\n\nexport const login = formData => async dispatch => {\n  //console.log(email);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // const body = JSON.stringify({ email, category, password });\n  //console.log(email);\n\n  try {\n    console.log(\"FISH\");\n    const res = await axios.post(\"/api/auth\", formData, config);\n    console.log(\"HIII\");\n    console.log(res);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(errpr => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; //logout\n\nexport const logout = () => dispatch => {\n  console.log(\"logout\");\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/lenovo/Downloads/bus/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","console","log","type","payload","data","err","register","name","email","category","password","config","headers","body","JSON","stringify","post","setItem","errors","response","forEach","errpr","msg","login","formData","removeItem","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  //CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert.js\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const loadUser = () => async (dispatch) => {\n  //console.log(localStorage.token);\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    //console.log(\"in\");\n    const res = await axios.get(\"api/auth\");\n    console.log(\"in user loaded\");\n    if (res) console.log(res);\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, category, password }) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"action\");\n  const body = JSON.stringify({ name, email, category, password });\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n//login\nexport const login = (formData) => async (dispatch) => {\n  //console.log(email);\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  // const body = JSON.stringify({ email, category, password });\n  //console.log(email);\n  try {\n    console.log(\"FISH\");\n    const res = await axios.post(\"/api/auth\", formData, config);\n    console.log(\"HIII\");\n    console.log(res);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n    localStorage.removeItem(\"token\");\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n//logout\nexport const logout = () => (dispatch) => {\n  console.log(\"logout\");\n  dispatch({ type: LOGOUT });\n};\n"]},"metadata":{},"sourceType":"module"}