{"ast":null,"code":"// import axios from \"axios\";\n// import {\n//   REGISTER_SUCCESS,\n//   REGISTER_FAIL,\n//   USER_LOADED,\n//   AUTH_ERROR,\n//   LOGIN_SUCCESS,\n//   LOGIN_FAIL,\n//   LOGOUT,\n//   CLEAR_PROFILE,\n// } from \"./types\";\n// import { setAlert } from \"./alert\";\n// import setAuthToken from \"../utils/setAuthToken\";\n// export const loadUser = () => async (dispatch) => {\n//   if (localStorage.token) {\n//     setAuthToken(localStorage.token);\n//   }\n//   try {\n//     const res = await axios.get(\"api/auth\");\n//     dispatch({\n//       type: USER_LOADED,\n//       payload: res.data,\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: AUTH_ERROR,\n//     });\n//   }\n// };\n// // Register User\n// export const register = ({ name, email, password }) => async (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ name, email, password });\n//   try {\n//     const res = await axios.post(\"/api/users\", body, config);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n//     dispatch({\n//       type: REGISTER_FAIL,\n//     });\n//   }\n// };\n// export const login = ({ email, password }) => async (dispatch) => {\n//   console.log(email);\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ email, password });\n//   console.log(email);\n//   try {\n//     console.log(\"FISH\");\n//     const res = await axios.post(\"/api/auth\", body, config);\n//     console.log(\"HIII\");\n//     console.log(res);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n//     localStorage.removeItem(\"token\");\n//     dispatch({\n//       type: LOGIN_FAIL,\n//     });\n//   }\n// };\n// //logout\n// export const logout = () => (dispatch) => {\n//   dispatch({ type: LOGOUT });\n//   dispatch({ type: CLEAR_PROFILE });\n// };","map":{"version":3,"sources":["/home/lenovo/Downloads/bus/client/src/actions/auth.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import axios from \"axios\";\n// import {\n//   REGISTER_SUCCESS,\n//   REGISTER_FAIL,\n//   USER_LOADED,\n//   AUTH_ERROR,\n//   LOGIN_SUCCESS,\n//   LOGIN_FAIL,\n//   LOGOUT,\n//   CLEAR_PROFILE,\n// } from \"./types\";\n// import { setAlert } from \"./alert\";\n// import setAuthToken from \"../utils/setAuthToken\";\n\n// export const loadUser = () => async (dispatch) => {\n//   if (localStorage.token) {\n//     setAuthToken(localStorage.token);\n//   }\n//   try {\n//     const res = await axios.get(\"api/auth\");\n\n//     dispatch({\n//       type: USER_LOADED,\n//       payload: res.data,\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: AUTH_ERROR,\n//     });\n//   }\n// };\n\n// // Register User\n// export const register = ({ name, email, password }) => async (dispatch) => {\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ name, email, password });\n//   try {\n//     const res = await axios.post(\"/api/users\", body, config);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: REGISTER_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n\n//     dispatch({\n//       type: REGISTER_FAIL,\n//     });\n//   }\n// };\n// export const login = ({ email, password }) => async (dispatch) => {\n//   console.log(email);\n\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ email, password });\n//   console.log(email);\n//   try {\n//     console.log(\"FISH\");\n//     const res = await axios.post(\"/api/auth\", body, config);\n//     console.log(\"HIII\");\n//     console.log(res);\n//     localStorage.setItem(\"token\", res.data.token);\n//     dispatch({\n//       type: LOGIN_SUCCESS,\n//       payload: res.data,\n//     });\n//     dispatch(loadUser());\n//   } catch (err) {\n//     const errors = err.response.data.errors;\n//     if (errors) {\n//       errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n//     }\n//     localStorage.removeItem(\"token\");\n\n//     dispatch({\n//       type: LOGIN_FAIL,\n//     });\n//   }\n// };\n// //logout\n// export const logout = () => (dispatch) => {\n//   dispatch({ type: LOGOUT });\n//   dispatch({ type: CLEAR_PROFILE });\n// };\n"]},"metadata":{},"sourceType":"module"}