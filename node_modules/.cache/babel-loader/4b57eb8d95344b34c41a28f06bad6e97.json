{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL //   LOGOUT,\n//   CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert.js\";\nimport setAuthToken from \"../utils/setAuthToken\";\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"api/auth\");\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  category,\n  password\n}) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  console.log(\"action\");\n  const body = JSON.stringify({\n    name,\n    email,\n    category,\n    password\n  });\n\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(errpr => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\nexport const login = ({\n  email,\n  category,\n  password\n}) => async dispatch => {\n  console.log(email);\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    category,\n    password\n  });\n  console.log(email);\n\n  try {\n    console.log(\"FISH\");\n    const res = await axios.post(\"/api/auth\", body, config);\n    console.log(\"HIII\");\n    console.log(res);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(errpr => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // //logout\n// export const logout = () => (dispatch) => {\n//   dispatch({ type: LOGOUT });\n//   dispatch({ type: CLEAR_PROFILE });\n// };","map":{"version":3,"sources":["/home/lenovo/Downloads/bus/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","setAlert","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","category","password","config","headers","console","log","body","JSON","stringify","post","setItem","errors","response","forEach","errpr","msg","login","removeItem"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  //   LOGOUT,\n  //   CLEAR_PROFILE,\n} from \"./types\";\nimport { setAlert } from \"./alert.js\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get(\"api/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, category, password }) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(\"action\");\n  const body = JSON.stringify({ name, email, category, password });\n  try {\n    const res = await axios.post(\"/api/users\", body, config);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\nexport const login = ({ email, category, password }) => async (dispatch) => {\n  console.log(email);\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ email, category, password });\n  console.log(email);\n  try {\n    console.log(\"FISH\");\n    const res = await axios.post(\"/api/auth\", body, config);\n    console.log(\"HIII\");\n    console.log(res);\n    localStorage.setItem(\"token\", res.data.token);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      errors.forEach((errpr) => dispatch(setAlert(errors.msg, \"danger\")));\n    }\n    localStorage.removeItem(\"token\");\n\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n// //logout\n// export const logout = () => (dispatch) => {\n//   dispatch({ type: LOGOUT });\n//   dispatch({ type: CLEAR_PROFILE });\n// };\n"]},"metadata":{},"sourceType":"module"}