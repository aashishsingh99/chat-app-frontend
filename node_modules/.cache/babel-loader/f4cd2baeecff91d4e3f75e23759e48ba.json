{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/lenovo/Downloads/bus/client/src/components/layout/Navbar.js\";\nimport { React, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\"; //import { logout } from \"../../actions/auth\";\n\nconst NavBar = ({\n  auth: {\n    isAuthenticated,\n    loading\n  }\n}) => {\n  const authLinks = /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 21\n  }, this);\n\n  const guestLinks = /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 22\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar bg-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), \"Hyper Tribe\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), !loading && /*#__PURE__*/_jsxDEV(Fragment, {\n      children: isAuthenticated ? authLinks : guestLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NavBar;\nNavBar.propTypes = {\n  //logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(NavBar);\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/home/lenovo/Downloads/bus/client/src/components/layout/Navbar.js"],"names":["React","Fragment","Link","connect","PropTypes","NavBar","auth","isAuthenticated","loading","authLinks","guestLinks","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB;AAAR,CAAD,KAA4C;AACzD,QAAMC,SAAS,gBAAG;AAAA;AAAA;AAAA;AAAA,UAAlB;;AACA,QAAMC,UAAU,gBAAG;AAAA;AAAA;AAAA;AAAA,UAAnB;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAA,iBACG,GADH,eAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,gCACE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQG,CAACF,OAAD,iBACC,QAAC,QAAD;AAAA,gBAAWD,eAAe,GAAGE,SAAH,GAAeC;AAAzC;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAjBD;;KAAML,M;AAmBNA,MAAM,CAACM,SAAP,GAAmB;AACjB;AACAL,EAAAA,IAAI,EAAEF,SAAS,CAACQ,MAAV,CAAiBC;AAFN,CAAnB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeH,OAAO,CAACW,eAAD,EAAkB,EAAlB,CAAP,CAA6BT,MAA7B,CAAf","sourcesContent":["import { React, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n//import { logout } from \"../../actions/auth\";\nconst NavBar = ({ auth: { isAuthenticated, loading } }) => {\n  const authLinks = <ul></ul>;\n  const guestLinks = <ul></ul>;\n  return (\n    <nav className=\"navbar bg-dark\">\n      <h1>\n        {\" \"}\n        <Link to=\"/\">\n          <i className=\"fas fa-code\" />\n          Hyper Tribe\n        </Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavBar.propTypes = {\n  //logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, {})(NavBar);\n"]},"metadata":{},"sourceType":"module"}